// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AnswerSubmitted extends ethereum.Event {
  get params(): AnswerSubmitted__Params {
    return new AnswerSubmitted__Params(this);
  }
}

export class AnswerSubmitted__Params {
  _event: AnswerSubmitted;

  constructor(event: AnswerSubmitted) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get gameId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get questionIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get answer(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get correct(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CarmenEscaped extends ethereum.Event {
  get params(): CarmenEscaped__Params {
    return new CarmenEscaped__Params(this);
  }
}

export class CarmenEscaped__Params {
  _event: CarmenEscaped;

  constructor(event: CarmenEscaped) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get gameId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get finalScore(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GameCompleted extends ethereum.Event {
  get params(): GameCompleted__Params {
    return new GameCompleted__Params(this);
  }
}

export class GameCompleted__Params {
  _event: GameCompleted;

  constructor(event: GameCompleted) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get gameId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get carmenCaught(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get score(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class GameStarted extends ethereum.Event {
  get params(): GameStarted__Params {
    return new GameStarted__Params(this);
  }
}

export class GameStarted__Params {
  _event: GameStarted;

  constructor(event: GameStarted) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get gameId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get questionIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CarmenSandiegoGame__getCurrentQuestionResult {
  value0: BigInt;
  value1: i32;

  constructor(value0: BigInt, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    return map;
  }

  getQuestionId(): BigInt {
    return this.value0;
  }

  getQuestionIndex(): i32 {
    return this.value1;
  }
}

export class CarmenSandiegoGame__getGameStateResult {
  value0: Array<BigInt>;
  value1: Array<BigInt>;
  value2: Array<boolean>;
  value3: i32;
  value4: i32;
  value5: boolean;
  value6: boolean;
  value7: BigInt;
  value8: BigInt;

  constructor(
    value0: Array<BigInt>,
    value1: Array<BigInt>,
    value2: Array<boolean>,
    value3: i32,
    value4: i32,
    value5: boolean,
    value6: boolean,
    value7: BigInt,
    value8: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromBooleanArray(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    return map;
  }

  getQuestionIds(): Array<BigInt> {
    return this.value0;
  }

  getPlayerAnswers(): Array<BigInt> {
    return this.value1;
  }

  getCorrectAnswers(): Array<boolean> {
    return this.value2;
  }

  getCurrentQuestion(): i32 {
    return this.value3;
  }

  getCorrectCount(): i32 {
    return this.value4;
  }

  getIsActive(): boolean {
    return this.value5;
  }

  getCarmenCaught(): boolean {
    return this.value6;
  }

  getStartTime(): BigInt {
    return this.value7;
  }

  getEndTime(): BigInt {
    return this.value8;
  }
}

export class CarmenSandiegoGame__getGlobalStatsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getTotalGames(): BigInt {
    return this.value0;
  }

  getTotalWins(): BigInt {
    return this.value1;
  }

  getGlobalWinRate(): BigInt {
    return this.value2;
  }
}

export class CarmenSandiegoGame__getPlayerStatsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getGamesPlayed(): BigInt {
    return this.value0;
  }

  getWins(): BigInt {
    return this.value1;
  }

  getWinRate(): BigInt {
    return this.value2;
  }
}

export class CarmenSandiegoGame__playerGamesResult {
  value0: i32;
  value1: i32;
  value2: boolean;
  value3: boolean;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: i32,
    value1: i32,
    value2: boolean,
    value3: boolean,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getCurrentQuestion(): i32 {
    return this.value0;
  }

  getCorrectCount(): i32 {
    return this.value1;
  }

  getIsActive(): boolean {
    return this.value2;
  }

  getCarmenCaught(): boolean {
    return this.value3;
  }

  getStartTime(): BigInt {
    return this.value4;
  }

  getEndTime(): BigInt {
    return this.value5;
  }
}

export class CarmenSandiegoGame extends ethereum.SmartContract {
  static bind(address: Address): CarmenSandiegoGame {
    return new CarmenSandiegoGame("CarmenSandiegoGame", address);
  }

  QUESTIONS_PER_GAME(): BigInt {
    let result = super.call(
      "QUESTIONS_PER_GAME",
      "QUESTIONS_PER_GAME():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_QUESTIONS_PER_GAME(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "QUESTIONS_PER_GAME",
      "QUESTIONS_PER_GAME():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  TOTAL_QUESTIONS(): BigInt {
    let result = super.call(
      "TOTAL_QUESTIONS",
      "TOTAL_QUESTIONS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_TOTAL_QUESTIONS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "TOTAL_QUESTIONS",
      "TOTAL_QUESTIONS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gameCounter(): BigInt {
    let result = super.call("gameCounter", "gameCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_gameCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("gameCounter", "gameCounter():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gameIdToPlayer(param0: BigInt): Address {
    let result = super.call(
      "gameIdToPlayer",
      "gameIdToPlayer(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_gameIdToPlayer(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "gameIdToPlayer",
      "gameIdToPlayer(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCurrentQuestion(
    player: Address
  ): CarmenSandiegoGame__getCurrentQuestionResult {
    let result = super.call(
      "getCurrentQuestion",
      "getCurrentQuestion(address):(uint256,uint8)",
      [ethereum.Value.fromAddress(player)]
    );

    return new CarmenSandiegoGame__getCurrentQuestionResult(
      result[0].toBigInt(),
      result[1].toI32()
    );
  }

  try_getCurrentQuestion(
    player: Address
  ): ethereum.CallResult<CarmenSandiegoGame__getCurrentQuestionResult> {
    let result = super.tryCall(
      "getCurrentQuestion",
      "getCurrentQuestion(address):(uint256,uint8)",
      [ethereum.Value.fromAddress(player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarmenSandiegoGame__getCurrentQuestionResult(
        value[0].toBigInt(),
        value[1].toI32()
      )
    );
  }

  getGameState(player: Address): CarmenSandiegoGame__getGameStateResult {
    let result = super.call(
      "getGameState",
      "getGameState(address):(uint256[10],uint256[10],bool[10],uint8,uint8,bool,bool,uint256,uint256)",
      [ethereum.Value.fromAddress(player)]
    );

    return new CarmenSandiegoGame__getGameStateResult(
      result[0].toBigIntArray(),
      result[1].toBigIntArray(),
      result[2].toBooleanArray(),
      result[3].toI32(),
      result[4].toI32(),
      result[5].toBoolean(),
      result[6].toBoolean(),
      result[7].toBigInt(),
      result[8].toBigInt()
    );
  }

  try_getGameState(
    player: Address
  ): ethereum.CallResult<CarmenSandiegoGame__getGameStateResult> {
    let result = super.tryCall(
      "getGameState",
      "getGameState(address):(uint256[10],uint256[10],bool[10],uint8,uint8,bool,bool,uint256,uint256)",
      [ethereum.Value.fromAddress(player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarmenSandiegoGame__getGameStateResult(
        value[0].toBigIntArray(),
        value[1].toBigIntArray(),
        value[2].toBooleanArray(),
        value[3].toI32(),
        value[4].toI32(),
        value[5].toBoolean(),
        value[6].toBoolean(),
        value[7].toBigInt(),
        value[8].toBigInt()
      )
    );
  }

  getGlobalStats(): CarmenSandiegoGame__getGlobalStatsResult {
    let result = super.call(
      "getGlobalStats",
      "getGlobalStats():(uint256,uint256,uint256)",
      []
    );

    return new CarmenSandiegoGame__getGlobalStatsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getGlobalStats(): ethereum.CallResult<
    CarmenSandiegoGame__getGlobalStatsResult
  > {
    let result = super.tryCall(
      "getGlobalStats",
      "getGlobalStats():(uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarmenSandiegoGame__getGlobalStatsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getPlayerStats(player: Address): CarmenSandiegoGame__getPlayerStatsResult {
    let result = super.call(
      "getPlayerStats",
      "getPlayerStats(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(player)]
    );

    return new CarmenSandiegoGame__getPlayerStatsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getPlayerStats(
    player: Address
  ): ethereum.CallResult<CarmenSandiegoGame__getPlayerStatsResult> {
    let result = super.tryCall(
      "getPlayerStats",
      "getPlayerStats(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarmenSandiegoGame__getPlayerStatsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  hasActiveGame(player: Address): boolean {
    let result = super.call("hasActiveGame", "hasActiveGame(address):(bool)", [
      ethereum.Value.fromAddress(player)
    ]);

    return result[0].toBoolean();
  }

  try_hasActiveGame(player: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasActiveGame",
      "hasActiveGame(address):(bool)",
      [ethereum.Value.fromAddress(player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  playerGameCount(param0: Address): BigInt {
    let result = super.call(
      "playerGameCount",
      "playerGameCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_playerGameCount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "playerGameCount",
      "playerGameCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  playerGames(param0: Address): CarmenSandiegoGame__playerGamesResult {
    let result = super.call(
      "playerGames",
      "playerGames(address):(uint8,uint8,bool,bool,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new CarmenSandiegoGame__playerGamesResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toBoolean(),
      result[3].toBoolean(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_playerGames(
    param0: Address
  ): ethereum.CallResult<CarmenSandiegoGame__playerGamesResult> {
    let result = super.tryCall(
      "playerGames",
      "playerGames(address):(uint8,uint8,bool,bool,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarmenSandiegoGame__playerGamesResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toBoolean(),
        value[3].toBoolean(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  playerWins(param0: Address): BigInt {
    let result = super.call("playerWins", "playerWins(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_playerWins(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("playerWins", "playerWins(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  questionsIPFSHash(): string {
    let result = super.call(
      "questionsIPFSHash",
      "questionsIPFSHash():(string)",
      []
    );

    return result[0].toString();
  }

  try_questionsIPFSHash(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "questionsIPFSHash",
      "questionsIPFSHash():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalCarmenCaught(): BigInt {
    let result = super.call(
      "totalCarmenCaught",
      "totalCarmenCaught():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalCarmenCaught(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalCarmenCaught",
      "totalCarmenCaught():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalGamesPlayed(): BigInt {
    let result = super.call(
      "totalGamesPlayed",
      "totalGamesPlayed():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalGamesPlayed(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalGamesPlayed",
      "totalGamesPlayed():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _questionsIPFSHash(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class StartGameCall extends ethereum.Call {
  get inputs(): StartGameCall__Inputs {
    return new StartGameCall__Inputs(this);
  }

  get outputs(): StartGameCall__Outputs {
    return new StartGameCall__Outputs(this);
  }
}

export class StartGameCall__Inputs {
  _call: StartGameCall;

  constructor(call: StartGameCall) {
    this._call = call;
  }

  get questionIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class StartGameCall__Outputs {
  _call: StartGameCall;

  constructor(call: StartGameCall) {
    this._call = call;
  }
}

export class SubmitAnswerCall extends ethereum.Call {
  get inputs(): SubmitAnswerCall__Inputs {
    return new SubmitAnswerCall__Inputs(this);
  }

  get outputs(): SubmitAnswerCall__Outputs {
    return new SubmitAnswerCall__Outputs(this);
  }
}

export class SubmitAnswerCall__Inputs {
  _call: SubmitAnswerCall;

  constructor(call: SubmitAnswerCall) {
    this._call = call;
  }

  get answerIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get correctAnswerIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SubmitAnswerCall__Outputs {
  _call: SubmitAnswerCall;

  constructor(call: SubmitAnswerCall) {
    this._call = call;
  }
}

export class UpdateQuestionsHashCall extends ethereum.Call {
  get inputs(): UpdateQuestionsHashCall__Inputs {
    return new UpdateQuestionsHashCall__Inputs(this);
  }

  get outputs(): UpdateQuestionsHashCall__Outputs {
    return new UpdateQuestionsHashCall__Outputs(this);
  }
}

export class UpdateQuestionsHashCall__Inputs {
  _call: UpdateQuestionsHashCall;

  constructor(call: UpdateQuestionsHashCall) {
    this._call = call;
  }

  get newHash(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateQuestionsHashCall__Outputs {
  _call: UpdateQuestionsHashCall;

  constructor(call: UpdateQuestionsHashCall) {
    this._call = call;
  }
}
